I"Z<ul id="markdown-toc">
  <li><a href="#html" id="markdown-toc-html"><code class="highlighter-rouge">HTML</code></a></li>
</ul>

<h4 id="html"><code class="highlighter-rouge">HTML</code></h4>

<p><strong><code class="highlighter-rouge">Hyper Text Markup Language</code>，超文本标记语言，不是一种编程语言，而是一种标记语言</strong></p>

<p><em>思想：网页中有很多数据，不同的数据可能需要不同的显示效果，一个标签相当于一个容器，想要修改容器内数据的样式，只需要改变容器的属性值，就可以实现容器内数据样式的变化。</em></p>

<p><strong>语言结构介绍：</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- 声明文档页面使用的html版本，当前是html5 --&gt;</span>
<span class="cp">&lt;!DOCTYPE html&gt;</span>

<span class="c">&lt;!-- html文档的根元素标签，表示html文档的开始和结束 --&gt;</span>
<span class="nt">&lt;html&gt;</span>
	<span class="c">&lt;!-- html文档的头部标签 --&gt;</span>
	<span class="nt">&lt;head&gt;</span>
		<span class="c">&lt;!-- 定义文档标题 --&gt;</span>
		<span class="nt">&lt;title&gt;</span>html学习<span class="nt">&lt;/title&gt;</span>

		<span class="c">&lt;!-- 
		用于html页面的元信息
		http-equiv：指定元信息的名称，该属性指定的名称具有特殊意义，它可以向浏览器传回一些有用的信息，帮助浏览器正确地处理网页内容。
		name：指定元信息名称，该名称可以随意指定
		content：指定元信息的值
		 --&gt;</span>
		<span class="c">&lt;!-- 指定文档的字符编码 --&gt;</span>
		<span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"Content-Type"</span> <span class="na">content=</span><span class="s">"text/html;charset=utf-8"</span><span class="nt">/&gt;</span>
		<span class="c">&lt;!-- 3s后会自动跳转到baidu主页 --&gt;</span>
		<span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"refresh"</span> <span class="na">content=</span><span class="s">"3;url=http://www.baidu.com"</span><span class="nt">/&gt;</span> 
		<span class="c">&lt;!-- 指定作者 --&gt;</span>
		<span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"author"</span> <span class="na">content=</span><span class="s">"author_name"</span><span class="nt">/&gt;</span>
		<span class="c">&lt;!-- 指定关键字，用逗号隔开（便于搜索引擎进行搜索） --&gt;</span>
		<span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"keywords"</span> <span class="na">content=</span><span class="s">"关键字1，关键字2，关键字3"</span><span class="nt">/&gt;</span>
		<span class="c">&lt;!-- 对关键字进行描述 --&gt;</span>
		<span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"description"</span> <span class="na">content=</span><span class="s">"对关键字的描述..."</span><span class="nt">&gt;</span>

		<span class="c">&lt;!-- 链接外部js资源文件 --&gt;</span>
		<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"theme.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
		<span class="c">&lt;!-- 包含js脚本 --&gt;</span>
		<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span><span class="nt">&gt;</span>
			<span class="c1">// js代码</span>
		<span class="nt">&lt;/script&gt;</span>

		<span class="c">&lt;!-- 链接外部css资源文件 --&gt;</span>
		<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stypesheet"</span> <span class="na">type=</span><span class="s">"text/css"</span> <span class="na">href=</span><span class="s">"theme.css"</span><span class="nt">/&gt;</span>
		<span class="c">&lt;!-- 定义内部css样式 --&gt;</span>
		<span class="nt">&lt;style </span><span class="na">type=</span><span class="s">"text/css"</span><span class="nt">&gt;</span>
			<span class="c">/* css代码 */</span>
		<span class="nt">&lt;/style&gt;</span>
	<span class="nt">&lt;/head&gt;</span>

	<span class="c">&lt;!-- html文档主体标签 --&gt;</span>
	<span class="nt">&lt;body&gt;</span>
	<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p><strong>块级标签</strong>
显示为”块”状，浏览器会在其前后显示折行。常用的块级元素包括：<code class="highlighter-rouge">&lt;p&gt;</code>, <code class="highlighter-rouge">&lt;h1&gt;~&lt;h6&gt;</code>, <code class="highlighter-rouge">&lt;div&gt;</code>, <code class="highlighter-rouge">&lt;ul&gt;</code>等</p>

<p><strong>标题标签</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- 标题标签，从h1到h6依次文字减小 --&gt;
&lt;h1&gt;一级标题&lt;/h1&gt;
&lt;h2&gt;二级标题&lt;/h2&gt;
&lt;h3&gt;三级标题&lt;/h3&gt;
&lt;h4&gt;四级标题&lt;/h4&gt;
&lt;h5&gt;五级标题&lt;/h5&gt;
&lt;h6&gt;六级标题&lt;/h6&gt;
</code></pre></div></div>

<p><strong>段落标签</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;p&gt;同一个世界，同一个梦想&lt;/p&gt;
&lt;p&gt;梦想还是要有的，万一实现了呢？&lt;/p&gt;
</code></pre></div></div>

<p><strong>水平线标签</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- &lt;hr/&gt; size从1-7，越来越粗 --&gt;
&lt;hr/&gt;
</code></pre></div></div>

<p><strong>列表</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- ol：有序列表 type设置排序方式 1默认，还有a,i.. --&gt;
&lt;ol type="a"&gt;
	&lt;li&gt;中国&lt;/li&gt;
	&lt;li&gt;日本&lt;/li&gt;
	&lt;li&gt;韩国&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- ul：无序列表 type：circle（空心圆）,disc（实心圆）,square（实心方块），默认desc --&gt;
&lt;ul type="circle"&gt;
	&lt;li&gt;苹果&lt;/li&gt;
	&lt;li&gt;香蕉&lt;/li&gt;
	&lt;li&gt;橘子&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- dl：definition list，定义列表，最常用 --&gt;
&lt;!-- dl, dt, dd, 可以将or和ul放在dd里面 --&gt;
&lt;dl&gt;
	&lt;dt&gt;亚洲&lt;/dt&gt;
		&lt;dd&gt;中国&lt;/dd&gt;
		&lt;dd&gt;日本&lt;/dd&gt;
		&lt;dd&gt;朝鲜&lt;/dd&gt;
	&lt;dt&gt;欧洲&lt;/dt&gt;
		&lt;dd&gt;英国&lt;/dd&gt;
		&lt;dd&gt;法国&lt;/dd&gt;
		&lt;dd&gt;德国&lt;/dd&gt;	
&lt;/dl&gt;
</code></pre></div></div>

<p><strong>分区标签</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- div标签一般当作结构化块状元素使用，一般最常用的用途是对网页进行整体分块布局，即当容器来使用 --&gt;
&lt;div id="fruit"&gt;
	&lt;p&gt;苹果&lt;/p&gt;
	&lt;p&gt;香蕉&lt;/p&gt;
	&lt;p&gt;橘子&lt;/p&gt;
&lt;/div&gt;
&lt;div id="country"&gt;
	&lt;p&gt;中国&lt;/p&gt;
	&lt;p&gt;日本&lt;/p&gt;
	&lt;p&gt;朝鲜&lt;/p&gt;
&lt;/div&gt;
</code></pre></div></div>

<p><strong>行级标签</strong></p>

<p>按行逐一显示，前后不会自动换行，常用的行级标签包括：<code class="highlighter-rouge">&lt;b&gt;</code>, <code class="highlighter-rouge">&lt;i&gt;</code>, <code class="highlighter-rouge">&lt;sub&gt;</code>, <code class="highlighter-rouge">&lt;sup&gt;</code>等</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- 定义粗体文本 --&gt;
&lt;b&gt;粗体文本&lt;/b&gt;
&lt;!-- 定义倾斜文本 --&gt;
&lt;i&gt;倾斜文本&lt;/i&gt;
&lt;!-- 效果和b类似，语气较强 --&gt;
&lt;strong&gt;粗体文本&lt;/strong&gt;
&lt;!-- 效果和i类似，语气较强 --&gt;
&lt;em&gt;倾斜文本&lt;/em&gt;
&lt;!-- 定义小号文本 --&gt;
&lt;small&gt;小号文本&lt;/small&gt;
&lt;!-- 定义下标文本 --&gt;
H&lt;sub&gt;2&lt;/sub&gt;o
&lt;!-- 定义上标文本 --&gt;
10&lt;sup&gt;2&lt;/sup&gt;
&lt;!-- 定义文本显示方向，内有dir属性，只能取值ltr从左到右或rtl从右到左 --&gt;
&lt;bdo dir="rtl"&gt;文本内容&lt;/bdo&gt;

&lt;!-- 
超链接标签
href：指定超链接所关联的另一个资源
target：指定框架集中的哪个框架来装载另一个资源，该属性值有_self, _blank, _top, _parent四个值，分别代表使用自身、新窗口、顶层框架、父框架来装载新资源
 --&gt;
&lt;a href="超链接地址" target="目标窗口"&gt;点击&lt;/a&gt;

&lt;!-- 图像标签 --&gt;
&lt;img src="图片地址" alt="提示文字"/&gt;

&lt;!-- span标签：内部放文本或者行级标签 --&gt;
&lt;span&gt;文本等行级内容&lt;/span&gt;

&lt;!-- 换行标签 --&gt;
&lt;br/&gt;

&lt;!-- 常用的特殊符号 --&gt;
&amp;nbsp;	&lt;!-- 空格 --&gt;
&amp;gt;	&lt;!-- 大于号(&gt;) --&gt;
&amp;lt;	&lt;!-- 小于号(&lt;) --&gt;
&amp;quot;	&lt;!-- 引号(") --&gt;
&amp;copy;	&lt;!-- 版权符号(©) --&gt;
</code></pre></div></div>

<p><strong>框架</strong>
<code class="highlighter-rouge">frameset</code>框架集
创建框架页面的步骤：</p>

<ul>
  <li>创建各个子窗口对应的<code class="highlighter-rouge">html</code>文件</li>
  <li>创建整个框架文件，分别引用子窗口文件</li>
</ul>

<p>框架的使用</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- 
frameset：框架集标签，不能与body标签同时使用，除非与noframes标签联合使用时
将浏览器分割成多个框架页，来加载多个html页面
frame：框架标签
cols：pixels, %, * 定义框架集中列的数目和尺寸
rows：pixels, %, * 定义框架集中行的数目和尺寸
noresize：设置框架尺寸不可调整
border：设置框架边框宽度
--&gt;
&lt;frameset rows="25%,*" border="1" noresize="noresize"&gt;
	&lt;frame src="top.html"&gt;上边/frame&gt;
	&lt;frameset cols="25%,*"&gt;
		&lt;!-- 如果希望点击左边框架的超链接，右边框架显示超链接内容，可以将左边超链接a标签的target设置成右边框架的名称即可 --&gt;
		&lt;frame src="left.html" name="leftFrame"&gt;左边&lt;/frame&gt;
		&lt;frame src="right.html" name="rightFrame"&gt;右边&lt;/frame&gt;
	&lt;/frameset&gt;
	
	&lt;!-- noframe标签为那些不支持框架的浏览器显示文本，noframes元素位于frameset内部 --&gt;
	&lt;noframes&gt;
		&lt;body&gt;
			您的浏览器无法处理框架！
		&lt;/body&gt;
	&lt;/noframes&gt;
&lt;/frameset&gt;
</code></pre></div></div>

<p><code class="highlighter-rouge">iframe</code>内嵌框架</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- 
iframe：内嵌框架，在body标签内部
frameborder：0, 1 规定是否显示框架周围的边框
name：规定iframe的名称
scrolling：yes(显示), no(不显示), auto(内容超过框架则显示，否则不显示) 规定是否在iframe中显示滚动条
scr：规定在iframe中显示的文档的url
width：框架宽度
height：框架高度
 --&gt;
&lt;body&gt;
	&lt;!-- &lt;iframe src="引用页面地址" name="框架标识名" frameborder="边框" scrolling="是否显示滚动条"&gt; --&gt;

	&lt;!-- 和frameset类似，如果希望点击iframe外的超链接，iframe中显示相应的网页，可以将超链接a标签的target设置成iframe的名称即可 --&gt;
	&lt;iframe src="http://www.baidu.com" name="contentFrame" width="100%" height="400px"&gt;&lt;/iframe&gt;
	&lt;p&gt;&lt;a href="http://www.sina.com.cn/" target="contentFrame"&gt;新浪&lt;/a&gt;&lt;/p&gt;
	&lt;p&gt;&lt;a href="http://www.baidu.com/" target="contentFrame"&gt;百度&lt;/a&gt;&lt;/p&gt;
	&lt;/iframe&gt;
&lt;/body&gt;
</code></pre></div></div>

<p><strong>表格</strong></p>

<p>使用场景</p>

<ul>
  <li>主要用于规则的数据显示；</li>
  <li>适当的可以在表单页面中使用；</li>
</ul>

<p>使用表格标签进行页面布局的缺点</p>

<ul>
  <li>代码量比较大，页面浏览速度比较慢；</li>
  <li>层次结构比较复杂，不易于维护和改版；</li>
  <li>
    <p>不利于搜索引擎搜索查找数据；</p>

    <p><!-- 
  定义表格的开始和结束
  cellpadding：单元格边框和内容之前的距离
  cellspacing：单元格和单元格之间的距离
   --></p>
    <table border="1" cellspacing="0">
  	<!-- 定义表格的标题 -->
  	<caption>我喜欢的NBA球队</caption>
    	
  	<!-- 定义表格头 -->
  	<thead>
  		<!-- 定义表格行，该元素内只能包含th标签和td标签 -->
  		<tr>
  			<!-- 定义表格页眉的单元格 -->
  			<th>球队名称</th>
  			<th>老板</th>
  			<th>当家球星</th>
  		</tr>
  	</thead>
    	
  	<!-- 定义表格的主体 -->
  	<tbody>
  		<tr>
  			<!-- 
  			定义单元格，包含两个主要的属性
  			colspan：单元格跨多少列
  			rowspan：单元格跨多少行
  			 -->
  			<td>骑士</td>
  			<td>丹尼尔·吉尔伯特</td>
  			<td>勒布朗·詹姆斯</td>
  		</tr>
  		<tr>
  			<td>勇士</td>
  			<td>乔·拉科布</td>
  			<td>斯蒂芬·库里</td>
  		</tr>
  		<tr>
  			<td>马刺</td>
  			<td>皮特·霍尔特</td>
  			<td>科怀·伦纳德</td>
  		</tr>
  	</tbody>
    	
  	<!-- 定义表格尾部 -->
  	<tfoot>
  		<tr>
  			<td colspan="3">总计3支球队</td>
  		</tr>
  	</tfoot>
    	
  </table>
  </li>
</ul>

<p><strong>表单</strong>
基本语法</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- 
action：指定表单提交后由服务器上的哪个处理程序进行处理
enctype：用于指定表单数据的编码方式
method：指定向服务器提交的方式 get post
 --&gt;
&lt;form action="表单提交地址" method="提交方法" target="打开方式"&gt;
	&lt;!-- 文本框、按钮等表单元素 --&gt;
&lt;/form&gt;
</code></pre></div></div>

<p>常见的表单元素使用</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- 
		input元素中常用属性：
		checked：设置单选框、复选框初始状态是否处于选中状态，只有当type属性为checkbox或radio时才可指定
		disabled：设置首次加载时禁用此元素，当type为hidden时不能指定该属性
		maxlength：指定文本框中所允许输入的最大字符数
		readonly：指定该文本框内的值不允许修改（可用js脚本修改）
		size：指定该元素的长度
		src：指定图像域所显示的图像url，只有当type的值为image时才可以指定该属性
		 --&gt;

		&lt;!-- text，单行文本框 --&gt;
		单行文本框：&lt;input type="text" maxlength="10" size="4" /&gt;&lt;br/&gt;

		&lt;!-- password，密码输入框 --&gt;
		密码输入框：&lt;input type="password" disabled="disabled"/&gt;&lt;br/&gt;

		&lt;!-- hidden，隐藏域 --&gt;
		隐藏域&lt;input type="hidden"/&gt;&lt;br/&gt;

		&lt;!-- radio，单选框 --&gt;
		单选框：男&lt;input type="radio" name="sex" value="0" /&gt;
			   女&lt;input type="radio" name="sex" value="1" checked="checked" /&gt;&lt;br/&gt;
			
		&lt;!-- checkbox，复选框 --&gt;
		复选框：篮球&lt;input type="checkbox" name="hobby" value="0" /&gt; 
			   足球&lt;input type="checkbox" name="hobby" value="1" /&gt;
			   排球&lt;input type="checkbox" name="hobby" value="2"&gt;&lt;br/&gt;

		&lt;!-- image，图像域，可以指定width和height属性，有submit按钮的功能，会提交表单数据 --&gt;
		图像域：&lt;input type="image"/&gt;&lt;br/&gt;

		&lt;!-- file，文件上传域 --&gt;
		文件上传：&lt;input type="file"/&gt;&lt;br/&gt;

		&lt;!-- submit、reset、button，提交、重置、普通按钮 --&gt;
		提交按钮：&lt;input type="submit" value="提交按钮"/&gt;&lt;br/&gt;
		重置按钮：&lt;input type="reset" value="重置按钮"/&gt;&lt;br/&gt;
		普通按钮：&lt;input type="button" value="普通按钮"/&gt;&lt;br/&gt;
</code></pre></div></div>

<p>使用<code class="highlighter-rouge">button</code>定义按钮</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- 
button按钮与input按钮相比，提供了更强大的功能和更丰富的内容
disabled：指定是否禁用此元素，该属性的值只能是disabled或者省略
name：指定按钮的唯一名称
type：指定按钮属于哪种按钮，只能是button、reset、submit
 --&gt;
&lt;button type="按钮类型" name="按钮名称"&gt;
	普通文本、格式化文本、图像
&lt;/button&gt;

提交按钮：&lt;button type="submit"&gt;&lt;b&gt;提交按钮&lt;/b&gt;&lt;/button&gt;&lt;br/&gt;
重置按钮：&lt;button type="reset"&gt;&lt;i&gt;重置按钮&lt;/i&gt;&lt;/button&gt;&lt;br/&gt;
普通按钮：&lt;button type="button"&gt;普通按钮&lt;/button&gt;
</code></pre></div></div>

<p>使用<code class="highlighter-rouge">label</code>定义标签</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- 
label元素不会向用户呈现任何特殊效果，不过它为鼠标用户改进了可用性。如果在label元素内点击文本，就会触发，浏览器会自动将焦点转到和标签相关的表单控件上。
for：规定label绑定到哪个表单元素，值为表单元素的id
form：规定label字段所属的一个或多个表单
 --&gt;
&lt;!-- &lt;label&gt;文本&lt;/label&gt; --&gt;
&lt;label for="text"&gt;单行文本框：&lt;/label&gt;&lt;input type="text" id="text"/&gt;
</code></pre></div></div>

<p><strong>列表菜单和下拉菜单</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- 
select标签常用属性：
disabled：指定是否禁用此元素，该属性的值只能是disabled或者省略
mutiple：设置该列表框是否允许多选
size：指定该列表内同时显示多少个列表项
 --&gt;
&lt;!-- 
基本语法：
&lt;select name="指定列表名称" size="行数"&gt;
	&lt;option value="选项值" selected="selected"&gt;...&lt;/option&gt;
&lt;/select&gt; 
--&gt;
&lt;!-- 列表菜单：多选项展示，可多选 --&gt;
&lt;select size="3" multiple="multiple" id="country"&gt;
	&lt;option value="0"&gt;中国&lt;/option&gt;
	&lt;option value="1"&gt;美国&lt;/option&gt;
	&lt;option value="2"&gt;日本&lt;/option&gt;
	&lt;option value="3"&gt;韩国&lt;/option&gt;
&lt;/select&gt;&lt;br/&gt;

&lt;!-- 下拉菜单 --&gt;
&lt;select id="city"&gt;
	&lt;option value="0"&gt;北京&lt;/option&gt;
	&lt;option value="1"&gt;上海&lt;/option&gt;
	&lt;option value="2"&gt;武汉&lt;/option&gt;
	&lt;option value="3"&gt;广州&lt;/option&gt;
&lt;/select&gt;&lt;br/&gt;

&lt;!-- 
在&lt;select&gt;标签内，只能包含如下两种子元素：
&lt;option&gt;：用于定义列表框选项或菜单项，它的常用属性如下：
	disabled：指定禁用该选择，该属性的值只能是disabled或省略
	selected：指定该列表初始状态是否处于选中状态，值只能为selected
	value：指定该选项对应的请求参数值
&lt;optgroup&gt;：用于定义列表项或菜单项组，它的常用属性如下：
	label：指定该选项组的标签，必需
	disabled：禁用该选项组里的所有选项，该属性值只能为disabled或省略
--&gt;
&lt;select&gt;
	&lt;optgroup label="一线城市"&gt;
		&lt;option&gt;北京&lt;/option&gt;
		&lt;option&gt;上海&lt;/option&gt;
		&lt;option&gt;广州&lt;/option&gt;
	&lt;/optgroup&gt;
	&lt;optgroup label="二线城市"&gt;
		&lt;option&gt;杭州&lt;/option&gt;
		&lt;option&gt;武汉&lt;/option&gt;
		&lt;option&gt;南京&lt;/option&gt;
	&lt;/optgroup&gt;
&lt;/select&gt;
</code></pre></div></div>

<p><strong>多行文本框</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- 
textarea：多行文本框，常用属性如下：
cols：指定文本框的宽度，必填
rows：指定文本框的高度，必填
readonly：指定该文本框只读，该属性的值只能是readonly或省略
 --&gt;
&lt;!-- 
基本语法：
&lt;textarea name="..." cols="列宽" rows="行宽"&gt;
文本内容
&lt;/textarea&gt; 
--&gt;
&lt;textarea name="content" cols="50" rows="5" readonly="readonly"&gt;
1) 用户可通过各种已有和未来新增的渠道注册账号及加入付费使用。 
2) 在用户使用具体某种方式加入付费会员时，须阅读并确认相关的用户协议和使用方法。
&lt;/textarea&gt;
</code></pre></div></div>

<p><strong><code class="highlighter-rouge">html</code>多媒体</strong></p>

<p><code class="highlighter-rouge">web</code>上的多媒体指的是音效、音乐、视频和动画，现代网络浏览器已经支持很多多媒体格式。常见的视频格式有<code class="highlighter-rouge">avi</code>,<code class="highlighter-rouge"> wmv</code>, <code class="highlighter-rouge">mpg/mpeg</code>, <code class="highlighter-rouge">mov</code>, <code class="highlighter-rouge">rm/ram</code>, <code class="highlighter-rouge">mp4</code>等，常用的音频格式有<code class="highlighter-rouge">mid/midi</code>, <code class="highlighter-rouge">rm/ram</code>, <code class="highlighter-rouge">wav</code>, <code class="highlighter-rouge">wma</code>, <code class="highlighter-rouge">mp3/mpga</code>等。</p>

<p>在<code class="highlighter-rouge">html5</code>之前，主要提供两种元素来进行多媒体的展示，一个是<code class="highlighter-rouge">&lt;embed&gt;</code>标签，另一个是<code class="highlighter-rouge">&lt;object&gt;</code>标签。</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- 
embed是html5中新标签，定义嵌入的内容，比如插件，常用属性：
height：设置嵌入内容的高度
width：设置嵌入内容的宽度
src：设置嵌入内容的url
type：设置嵌入内容的类型

在html5中提供了audio（音频）和video（视频）标签来进行音频和视频的播放，使用比较简单，功能更强大。
 --&gt;

&lt;!-- embed播放音频 --&gt;
&lt;!-- &lt;embed src="/Users/wangzhao/Music/网易云音乐/电台节目/这个少女不太冷丶 - 牵丝戏.mp3" width="0" height="0" autostart="false" loop="true"&gt;&lt;/embed&gt; --&gt;

&lt;!-- embed播放flash视频 --&gt;
&lt;embed src="xxx.swf" width="200" height="200" loop="true" quality="high" PLUGINSPAGE="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFrash"&gt;&lt;/embed&gt;


&lt;!-- object标签 --&gt;
&lt;!-- 
可以使用&lt;object&gt;标签来给浏览器加载插件，通过加载的插件来播放音频和视频
微软开发，对IE兼容性很好，对其他浏览器兼容一般
 --&gt;
 &lt;object data="/Users/wangzhao/Music/网易云音乐/电台节目/这个少女不太冷丶 - 牵丝戏.mp3"&gt;
 	&lt;param name="src" value="/Users/wangzhao/Music/网易云音乐/电台节目/这个少女不太冷丶 - 牵丝戏.mp3"&gt;
 	&lt;param name="autoplay" value="false"&gt;
 &lt;/object&gt;
</code></pre></div></div>

:ET