I"%<ul id="markdown-toc">
  <li><a href="#关于函数" id="markdown-toc-关于函数">关于函数</a></li>
</ul>

<h4 id="关于函数">关于函数</h4>
<p><strong>函数是可重复执行的包含特定功能的代码段。</strong></p>

<p><code class="highlighter-rouge">js</code>中的<strong>命名函数</strong>和<strong>匿名函数</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;button id="btn1" onclick="func()"&gt;点击我吧&lt;/button&gt;
&lt;button id="btn2"&gt;点击它吧&lt;/button&gt;    

&lt;script&gt;
    //命名函数
    function func(){
        //代码段
        alert('点击我吧');
    }
    
    //匿名函数
    var btn2 = document.getElementById('btn2');
    btn2.onclick = function(){
        //代码段
        alert('点击它吧');
    }
&lt;/script&gt;
</code></pre></div></div>

<p>####关于<code class="highlighter-rouge">DOM</code>
<code class="highlighter-rouge">DOM</code>：<code class="highlighter-rouge">Document Object Model</code>，称为文档对象模型，在网页加载时，可以将结构化文档在内存中转换为对象结构树。简单的说，<code class="highlighter-rouge">DOM</code>并不是一种技术，而是一种访问结构化文档的一种思想。借用<code class="highlighter-rouge">DOM</code>模型，我们可以对<code class="highlighter-rouge">DOM</code>树进行修改、删除、新增等操作，让结构化文档动态化。
<code class="highlighter-rouge">DOM</code>模型中的节点–文档可以说是由节点构成的集合。在<code class="highlighter-rouge">DOM</code>模型中有以下3种节点：</p>
<ul>
  <li>元素节点：各种标签就是这些元素节点的名称，如<code class="highlighter-rouge">&lt;p&gt;</code>、<code class="highlighter-rouge">&lt;ul&gt;</code>等</li>
  <li>属性节点：一般用来修饰元素节点就称为属性节点</li>
  <li>文本节点：文本节点总是被包含在元素节点的内部</li>
</ul>

<p>注：为了动态地修改<code class="highlighter-rouge">html</code>元素，须先访问<code class="highlighter-rouge">html</code>元素。</p>

<p><strong>查找<code class="highlighter-rouge">HTML</code>元素</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>document.getElementById()            //id   
document.getElementsByClassName()    //class
document.getElementsByName()         //name
document.getElementsByTagName()      //tagName
</code></pre></div></div>

<p><strong>对元素节点的操作：</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>//创建节点
document.createElement(tag);    //tag必须是合法的html元素

//复制节点
document.cloneNode(boolean deep);    //deep为true，复制所有后带节点，为false，只复制当前节点

//添加节点
node.appendChild(newNode)
node.insertBefore(newNode, refNode)

//修改
node.replaceChild(newNode, oldNode)

//删除
node.removeChild(oldNode)
</code></pre></div></div>

<p><strong>对属性节点的操作：</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>//添加
node.setAttribute('属性名', '值');

//删除
node.removeAttribute('属性名');

//修改
node.setAttribute('属性名', '值');

//查询
node.getAttribute('属性名')

</code></pre></div></div>
<p><strong>对文本节点的操作：</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>//添加、删除、修改、查询
node.innerHTML = '';
</code></pre></div></div>

<p>注：通过<code class="highlighter-rouge">DOM</code>还可以修改<code class="highlighter-rouge">HTML</code>标签节点的样式：
<code class="highlighter-rouge">document.getElementById(id).style.property = new style</code></p>

:ET