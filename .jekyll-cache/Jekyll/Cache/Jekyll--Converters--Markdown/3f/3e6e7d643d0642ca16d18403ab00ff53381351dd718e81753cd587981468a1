I"D
<p>####<code class="highlighter-rouge">PHP</code>运算符</p>

<p><strong>按操作数：</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>一元运算符（只能接受一个值）
二元运算符（接受两个值）
三元运算符（接受三个值）
</code></pre></div></div>

<p><strong>按类型：</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>算术运算符
赋值运算符
位运算符
比较运算符
错误控制运算符
递增/递减运算符
逻辑运算符
</code></pre></div></div>

<p><strong>算法运算符</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/*
 * - 取反
 * + 加法
 * - 减法
 * * 乘法
 * / 除法 （两个整数能整除会返回integer型，其他情况会返回float型）
 * % 取模 （在运算之前会将两个数除去小数部分，转换成整数，结果和被除数的符号--正负号相同，和除数的符号无关）
 * **
 */
echo (5 % 3)."\n";      //输出：2
echo (5 % -3)."\n";     //输出：2
echo (-5 % 3)."\n";     //输出：-2
echo (-5 % -3)."\n";    //输出：-2

echo (5 ** 3)."\n";       //输出125（5*5*5）
</code></pre></div></div>

<p><strong>赋值运算符</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>//=：赋值

//传值赋值：将原变量的值拷贝到新变量中，改变一个并不影响另外一个。
$a1 = 10;
$a2 = $a1;
$a2 = 20;
echo "a1 = ".$a1."\ta2 = ".$a2."\n";

//引用赋值：意味着两个变量指向了同一个数据，没有拷贝任何东西
$b1 = 3;
$b2 = &amp;$b1;
$b2 = 4;
echo "b1 = ".$b1."\tb2 = ".$b2."\n";
</code></pre></div></div>

<p><strong>位运算符</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>位运算符允许对整型数中指定的位进行求值和操作。
</code></pre></div></div>

<p><strong>比较运算符</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>== 等于 （值相等）
=== 全等 （值相等并且类型相同）
!= 不等 （值不相等）
&lt;&gt; 不等 （值不相等）
!== 不全等 （值不相等或者类型不同）
&lt; 小于
&gt; 大于
&lt;= 小于等于
&gt;= 大于等于
</code></pre></div></div>

<p><strong>错误控制运算符</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@：当将其放置到一个PHP表达式之前，该表达式可能产生的任何错误信息都被忽略掉。
</code></pre></div></div>

<p><strong>递增/递减运算符</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>++$a：$a的值+1，然后返回$a
--$a：$a的值-1，然后返回$a
$a++：返回$a，然后$a的值+1
$a--：返回$a，然后$a的值-1
</code></pre></div></div>

<p><strong>逻辑运算符</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;&amp;（and）：逻辑与，$a和$b都为true的时候结果为true，其他情况都为false
||（or）：逻辑或，$a和$b都为false的时候结果为false，其他情况都为true
!：逻辑非，$a为true，结果为false，$a为false，结果为true
xor：逻辑异或，$a和$b两个值不相同的时候，结果为true，反之为false。
</code></pre></div></div>

<p><strong>字符串运算符</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.：连接运算符
.=：连接赋值运算符
</code></pre></div></div>

:ET